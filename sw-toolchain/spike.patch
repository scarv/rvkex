diff --git a/riscv/decode.h b/riscv/decode.h
index 7028c855..780072ba 100644
--- a/riscv/decode.h
+++ b/riscv/decode.h
@@ -80,6 +80,10 @@ public:
   insn_t(insn_bits_t bits) : b(bits) {}
   insn_bits_t bits() { return b & ~((UINT64_MAX) << (length() * 8)); }
   int length() { return insn_length(b); }
+  // ++ rvkex
+  uint64_t funct7() { return x(25, 7); }
+  uint64_t funct3() { return x(12, 3); }
+  // -- rvkex
   int64_t i_imm() { return int64_t(b) >> 20; }
   int64_t shamt() { return x(20, 6); }
   int64_t s_imm() { return x(7, 5) + (xs(25, 7) << 5); }
diff --git a/riscv/encoding.h b/riscv/encoding.h
index b2162963..9f402967 100644
--- a/riscv/encoding.h
+++ b/riscv/encoding.h
@@ -281,6 +281,22 @@
 /* Automatically generated by parse_opcodes.  */
 #ifndef RISCV_ENCODING_H
 #define RISCV_ENCODING_H
+// ++ rvkex
+#define MATCH_SRAIADD  0x8000105B
+#define  MASK_SRAIADD  0x8000707F
+#define MATCH_MADD51LU 0x0000005B
+#define  MASK_MADD51LU 0x0600707F
+#define MATCH_MADD51HU 0x0200005B
+#define  MASK_MADD51HU 0x0600707F
+#define MATCH_MADD57LU 0x0400005B
+#define  MASK_MADD57LU 0x0600707F
+#define MATCH_MADD57HU 0x0600005B
+#define  MASK_MADD57HU 0x0600707F
+#define MATCH_MADDLU   0x0000007B
+#define  MASK_MADDLU   0x0600707F
+#define MATCH_MADDHU   0x0200007B
+#define  MASK_MADDHU   0x0600707F
+// -- rvkex
 #define MATCH_SLLI_RV32 0x1013
 #define MASK_SLLI_RV32  0xfe00707f
 #define MATCH_SRLI_RV32 0x5013
@@ -3092,6 +3108,15 @@
 #define CAUSE_STORE_GUEST_PAGE_FAULT 0x17
 #endif
 #ifdef DECLARE_INSN
+// ++ rvkex
+DECLARE_INSN(sraiadd, MATCH_SRAIADD, MASK_SRAIADD)
+DECLARE_INSN(madd51lu, MATCH_MADD51LU, MASK_MADD51LU)
+DECLARE_INSN(madd51hu, MATCH_MADD51HU, MASK_MADD51HU)
+DECLARE_INSN(madd57lu, MATCH_MADD57LU, MASK_MADD57LU)
+DECLARE_INSN(madd57hu, MATCH_MADD57HU, MASK_MADD57HU)
+DECLARE_INSN(maddlu, MATCH_MADDLU, MASK_MADDLU)
+DECLARE_INSN(maddhu, MATCH_MADDHU, MASK_MADDHU)
+// -- rvkex
 DECLARE_INSN(slli_rv32, MATCH_SLLI_RV32, MASK_SLLI_RV32)
 DECLARE_INSN(srli_rv32, MATCH_SRLI_RV32, MASK_SRLI_RV32)
 DECLARE_INSN(srai_rv32, MATCH_SRAI_RV32, MASK_SRAI_RV32)
diff --git a/riscv/insns/madd51hu.h b/riscv/insns/madd51hu.h
new file mode 100644
index 00000000..78f2e182
--- /dev/null
+++ b/riscv/insns/madd51hu.h
@@ -0,0 +1,9 @@
+if(xlen == 64) {
+  uint64_t a = READ_REG(insn.rs1());
+  uint64_t b = READ_REG(insn.rs2());
+  uint64_t c = READ_REG(insn.rs3());
+
+  uint64_t r = (((uint128_t)a * b) >> 51) + c;
+
+  WRITE_REG(insn.rd(), r);
+}
diff --git a/riscv/insns/madd51lu.h b/riscv/insns/madd51lu.h
new file mode 100644
index 00000000..fdc7628b
--- /dev/null
+++ b/riscv/insns/madd51lu.h
@@ -0,0 +1,10 @@
+if(xlen == 64) {
+  uint64_t a = READ_REG(insn.rs1());
+  uint64_t b = READ_REG(insn.rs2());
+  uint64_t c = READ_REG(insn.rs3());
+  uint64_t m = ((uint64_t)1 << 51) - 1;
+
+  uint64_t r = ((a * b) & m) + c;
+
+  WRITE_REG(insn.rd(), r);
+}
diff --git a/riscv/insns/madd57hu.h b/riscv/insns/madd57hu.h
new file mode 100644
index 00000000..b56fbf11
--- /dev/null
+++ b/riscv/insns/madd57hu.h
@@ -0,0 +1,9 @@
+if(xlen == 64) {
+  uint64_t a = READ_REG(insn.rs1());
+  uint64_t b = READ_REG(insn.rs2());
+  uint64_t c = READ_REG(insn.rs3());
+
+  uint64_t r = (((uint128_t)a * b) >> 57) + c;
+
+  WRITE_REG(insn.rd(), r);
+}
diff --git a/riscv/insns/madd57lu.h b/riscv/insns/madd57lu.h
new file mode 100644
index 00000000..9ad10f48
--- /dev/null
+++ b/riscv/insns/madd57lu.h
@@ -0,0 +1,10 @@
+if(xlen == 64) {
+  uint64_t a = READ_REG(insn.rs1());
+  uint64_t b = READ_REG(insn.rs2());
+  uint64_t c = READ_REG(insn.rs3());
+  uint64_t m = ((uint64_t)1 << 57) - 1;
+
+  uint64_t r = ((a * b) & m) + c;
+
+  WRITE_REG(insn.rd(), r);
+}
diff --git a/riscv/insns/maddhu.h b/riscv/insns/maddhu.h
new file mode 100644
index 00000000..ff2a70bb
--- /dev/null
+++ b/riscv/insns/maddhu.h
@@ -0,0 +1,9 @@
+if(xlen == 64) {
+  uint64_t a = READ_REG(insn.rs1());
+  uint64_t b = READ_REG(insn.rs2());
+  uint64_t c = READ_REG(insn.rs3());
+
+  uint64_t r = (((uint128_t)a * b) >> 64) + c;
+
+  WRITE_REG(insn.rd(), r);
+}
diff --git a/riscv/insns/maddlu.h b/riscv/insns/maddlu.h
new file mode 100644
index 00000000..126985b8
--- /dev/null
+++ b/riscv/insns/maddlu.h
@@ -0,0 +1,9 @@
+if(xlen == 64) {
+  uint64_t a = READ_REG(insn.rs1());
+  uint64_t b = READ_REG(insn.rs2());
+  uint64_t c = READ_REG(insn.rs3());
+
+  uint64_t r = (a * b) + c;
+
+  WRITE_REG(insn.rd(), r);
+}
diff --git a/riscv/insns/sraiadd.h b/riscv/insns/sraiadd.h
new file mode 100644
index 00000000..77a686cd
--- /dev/null
+++ b/riscv/insns/sraiadd.h
@@ -0,0 +1,9 @@
+if(xlen == 64) {
+  int64_t a = READ_REG(insn.rs1());
+  int64_t b = READ_REG(insn.rs2());
+  uint64_t imm = insn.funct7() & 0x3F;
+
+  int64_t r = a + (b >> imm);
+
+  WRITE_REG(insn.rd(), r);
+}
diff --git a/riscv/riscv.mk.in b/riscv/riscv.mk.in
index 9a6b118d..d030ba5e 100644
--- a/riscv/riscv.mk.in
+++ b/riscv/riscv.mk.in
@@ -1273,6 +1273,17 @@ riscv_insn_svinval = \
 	hinval_vvma \
 	hinval_gvma \
 
+# ++ rvkex
+riscv_insn_rvkex = \
+	sraiadd \
+	madd51lu \
+	madd51hu \
+	madd57lu \
+	madd57hu \
+	maddlu \
+	maddhu
+# -- rvkex
+
 riscv_insn_list = \
 	$(riscv_insn_ext_a) \
 	$(riscv_insn_ext_c) \
@@ -1289,6 +1300,7 @@ riscv_insn_list = \
 	$(riscv_insn_ext_p) \
 	$(riscv_insn_priv) \
 	$(riscv_insn_svinval) \
+	$(riscv_insn_rvkex) \
 
 riscv_gen_srcs = \
 	$(addsuffix .cc,$(riscv_insn_list))
